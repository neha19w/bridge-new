{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = createMigrate;\n\nvar _constants = require(\"./constants\");\n\nfunction createMigrate(migrations, config) {\n  var _ref = config || {},\n      debug = _ref.debug;\n\n  return function (state, currentVersion) {\n    if (!state) {\n      if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: no inbound state, skipping migration');\n      return Promise.resolve(undefined);\n    }\n\n    var inboundVersion = state._persist && state._persist.version !== undefined ? state._persist.version : _constants.DEFAULT_VERSION;\n\n    if (inboundVersion === currentVersion) {\n      if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: versions match, noop migration');\n      return Promise.resolve(state);\n    }\n\n    if (inboundVersion > currentVersion) {\n      if (process.env.NODE_ENV !== 'production') console.error('redux-persist: downgrading version is not supported');\n      return Promise.resolve(state);\n    }\n\n    var migrationKeys = Object.keys(migrations).map(function (ver) {\n      return parseInt(ver);\n    }).filter(function (key) {\n      return currentVersion >= key && key > inboundVersion;\n    }).sort(function (a, b) {\n      return a - b;\n    });\n    if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: migrationKeys', migrationKeys);\n\n    try {\n      var migratedState = migrationKeys.reduce(function (state, versionKey) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: running migration for versionKey', versionKey);\n        return migrations[versionKey](state);\n      }, state);\n      return Promise.resolve(migratedState);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n}","map":{"version":3,"names":["exports","__esModule","default","createMigrate","_constants","require","migrations","config","_ref","debug","state","currentVersion","process","env","NODE_ENV","console","log","Promise","resolve","undefined","inboundVersion","_persist","version","DEFAULT_VERSION","error","migrationKeys","Object","keys","map","ver","parseInt","filter","key","sort","a","b","migratedState","reduce","versionKey","err","reject"],"sources":["/Users/nehawagadre/Desktop/advantage-bridge-mobile/node_modules/redux-persist/lib/createMigrate.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = createMigrate;\n\nvar _constants = require(\"./constants\");\n\nfunction createMigrate(migrations, config) {\n  var _ref = config || {},\n      debug = _ref.debug;\n\n  return function (state, currentVersion) {\n    if (!state) {\n      if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: no inbound state, skipping migration');\n      return Promise.resolve(undefined);\n    }\n\n    var inboundVersion = state._persist && state._persist.version !== undefined ? state._persist.version : _constants.DEFAULT_VERSION;\n\n    if (inboundVersion === currentVersion) {\n      if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: versions match, noop migration');\n      return Promise.resolve(state);\n    }\n\n    if (inboundVersion > currentVersion) {\n      if (process.env.NODE_ENV !== 'production') console.error('redux-persist: downgrading version is not supported');\n      return Promise.resolve(state);\n    }\n\n    var migrationKeys = Object.keys(migrations).map(function (ver) {\n      return parseInt(ver);\n    }).filter(function (key) {\n      return currentVersion >= key && key > inboundVersion;\n    }).sort(function (a, b) {\n      return a - b;\n    });\n    if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: migrationKeys', migrationKeys);\n\n    try {\n      var migratedState = migrationKeys.reduce(function (state, versionKey) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist: running migration for versionKey', versionKey);\n        return migrations[versionKey](state);\n      }, state);\n      return Promise.resolve(migratedState);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n}"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AAEA,SAASF,aAAT,CAAuBG,UAAvB,EAAmCC,MAAnC,EAA2C;EACzC,IAAIC,IAAI,GAAGD,MAAM,IAAI,EAArB;EAAA,IACIE,KAAK,GAAGD,IAAI,CAACC,KADjB;;EAGA,OAAO,UAAUC,KAAV,EAAiBC,cAAjB,EAAiC;IACtC,IAAI,CAACD,KAAL,EAAY;MACV,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCL,KAA7C,EAAoDM,OAAO,CAACC,GAAR,CAAY,qDAAZ;MACpD,OAAOC,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAP;IACD;;IAED,IAAIC,cAAc,GAAGV,KAAK,CAACW,QAAN,IAAkBX,KAAK,CAACW,QAAN,CAAeC,OAAf,KAA2BH,SAA7C,GAAyDT,KAAK,CAACW,QAAN,CAAeC,OAAxE,GAAkFlB,UAAU,CAACmB,eAAlH;;IAEA,IAAIH,cAAc,KAAKT,cAAvB,EAAuC;MACrC,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCL,KAA7C,EAAoDM,OAAO,CAACC,GAAR,CAAY,+CAAZ;MACpD,OAAOC,OAAO,CAACC,OAAR,CAAgBR,KAAhB,CAAP;IACD;;IAED,IAAIU,cAAc,GAAGT,cAArB,EAAqC;MACnC,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2CC,OAAO,CAACS,KAAR,CAAc,qDAAd;MAC3C,OAAOP,OAAO,CAACC,OAAR,CAAgBR,KAAhB,CAAP;IACD;;IAED,IAAIe,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYrB,UAAZ,EAAwBsB,GAAxB,CAA4B,UAAUC,GAAV,EAAe;MAC7D,OAAOC,QAAQ,CAACD,GAAD,CAAf;IACD,CAFmB,EAEjBE,MAFiB,CAEV,UAAUC,GAAV,EAAe;MACvB,OAAOrB,cAAc,IAAIqB,GAAlB,IAAyBA,GAAG,GAAGZ,cAAtC;IACD,CAJmB,EAIjBa,IAJiB,CAIZ,UAAUC,CAAV,EAAaC,CAAb,EAAgB;MACtB,OAAOD,CAAC,GAAGC,CAAX;IACD,CANmB,CAApB;IAOA,IAAIvB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCL,KAA7C,EAAoDM,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CS,aAA5C;;IAEpD,IAAI;MACF,IAAIW,aAAa,GAAGX,aAAa,CAACY,MAAd,CAAqB,UAAU3B,KAAV,EAAiB4B,UAAjB,EAA6B;QACpE,IAAI1B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCL,KAA7C,EAAoDM,OAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+DsB,UAA/D;QACpD,OAAOhC,UAAU,CAACgC,UAAD,CAAV,CAAuB5B,KAAvB,CAAP;MACD,CAHmB,EAGjBA,KAHiB,CAApB;MAIA,OAAOO,OAAO,CAACC,OAAR,CAAgBkB,aAAhB,CAAP;IACD,CAND,CAME,OAAOG,GAAP,EAAY;MACZ,OAAOtB,OAAO,CAACuB,MAAR,CAAeD,GAAf,CAAP;IACD;EACF,CApCD;AAqCD"},"metadata":{},"sourceType":"script"}